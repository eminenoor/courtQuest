Project Group Number: 5

Project Title: CourtQuest

Project Description: CourtQuest is a web application that facilitates Bilkenters’ sports field booking process. It does this by providing a convenient service for students, which includes finding available slots for courts, booking courts, and connecting with other players. 

The project's current status: Project is completed and functional.

What has been done: Making a reservation, joining or declining an activity invitation, accepting or declining a request, profile page and its editing, rating players, login and register functionality, notifications, forgot password functionalities are implemented with their further details as explained before.

Share of workload:

Emine: Emine was primarily responsible for the back-end development. She made the classes of the project and also helped make verification screens. Furthermore, she added the notifications functionality by creating a connection with the database, and directed the team for git commits. She also made the refinements of the other members’ codes checking edge cases. She connected our database to the backend and wrote the repository, controller, and service code for several entities, including Activity, Notification, Rating, and User. Some of these needed changes during the process, which the other teammates handled. She designed the verification view for entering the email and code, and she also created the notification view, managed the database connection, and implemented features for accepting and declining requests.

Can: Can was primarily responsible for the front-end development. He did the MakeReservationView, EditProfileView, MyProfileView, PlayersView, InvitePlayersView, NewPasswordView, and made some slight changes in all views. Created PlayerCard, PlayerCardRequest, PlayerCardInvite components. Added some additional methods to UserDB and UserService for database connection. Connected EditProfileView to database. Added profile pictures which users can upload their images from their pc, and modified database to store these profile pictures. Made some changes in LoginView, AnonymousUserLoginView, VerficiationCodeView for forgot-password functionality, and edited some additional methods to backend for updating the user and database when password is resetted. 

Elif: Elif was primarily responsible for the back-end development. In the implementation part, she implemented the registration of the users. She researched on how we can send mail to the users so that their mails are verified. She watched some videos on that and applied it to our project. She tried to learn how the database connects to our app and how the variables and objects are represented in the database. She implemented the connection to my activities and current activities. She made sure that all players had their activities and they were associated with each other. She also implemented the request functionality. Plus, she contributed to the implementation of the display of the current profile. Also, she implemented the rating functionality where users can rate others. She assigned some ratings for all the users which are volleyball, tennis, basketball and football ratings.

İlke: İlke was primarily responsible for the front-end development. She helped to make the views with  and components for the design of the project. She also connected the database to frontend for the invitation functionality, displaying players and their profiles, current activities, and established the connection between login page and spring security. She designed the “LoginView”, “LogoutView”, “RegistrationView”, “EmailVerification”, “CurrentActivitiesView”. Moreover, she made the start for some more views. She designed a “GeneralActivityCard”, then extended it for “MyActivityCard”, “ActivityCard”, “RequestActivityCard”, “MyInvitationsCard”, and used them in their related views. She also added “RatePlayersView”, “RatePlayersDetailedView”, “RatePlayersCard”, “RatePlayersDetailedCard”, “Notifications Card” and “NotificationsView”. She connected the “CurrentActivitiesView” to the database and displayed the public activities while also adding a reservation cancel logic to the “MyActivitiesView”. Perhaps one of the most important things she did related to the backend besides implementing the login functionality was implementing the invitations functionality. Specifically, she ensured users could invite players which would trigger invitations to appear on the “MyInvitationsView” of the related users. Then, if the invited users accepted the invitations, she associated them to those specific activities using the services and repositories implemented for the database. Lastly, she displayed the players of an activity retrieving them from the database, and also allowed the user to see the profile of different players creating another view for that.


To setup the project dependencies for Spring Boot DevTools, MySQL Database, Amazon RDS, Vaadin, Spring Security, JDBC API, Spring Data JPA, MySQL Driver, Java Mail Sender, CycloneDX SBOM Support. You can check the appropriate dependencies from the pom.xml file. To set the project in a local environment Amazon RDS dependency is not necessary. A database connection should be established and inserted to the application.properties file. After that the project can be run.